var searchData=
[
  ['make_5fleft',['make_left',['../group__either.html#gaf90ba9d2e6a1d7e7aaca65dcd1839011',1,'ftl']]],
  ['make_5fright',['make_right',['../group__either.html#gac7907be4e0dd490f19ae938596a67d63',1,'ftl']]],
  ['map',['map',['../structftl_1_1applicative.html#a8634a56ed34db5853eb2704eadc772d0',1,'ftl::applicative::map()'],['../structftl_1_1applicative_3_01function_3_01R_00_01P_00_01Ps_8_8_8_4_01_4.html#a5bc41a3f7af149e38165f3b4828d403b',1,'ftl::applicative&lt; function&lt; R, P, Ps...&gt; &gt;::map()'],['../structftl_1_1functor.html#a8bea58a9814e5ab2a3b9ab019d68055b',1,'ftl::functor::map()'],['../structftl_1_1monad_3_01std_1_1future_3_01T_01_4_01_4.html#adbbc8972511b1a3a0c194d0a5a1bbad1',1,'ftl::monad&lt; std::future&lt; T &gt; &gt;::map()'],['../structftl_1_1monad_3_01std_1_1list_3_01T_00_01A_3_01T_01_4_01_4_01_4.html#a6e158a89b7800282db7a9ad15292d6e6',1,'ftl::monad&lt; std::list&lt; T, A&lt; T &gt; &gt; &gt;::map(F &amp;&amp;f, const std::list&lt; T, A&lt; T &gt;&gt; &amp;l)'],['../structftl_1_1monad_3_01std_1_1list_3_01T_00_01A_3_01T_01_4_01_4_01_4.html#a2dce30238b895e0a4dffdf06f409a6a6',1,'ftl::monad&lt; std::list&lt; T, A&lt; T &gt; &gt; &gt;::map(F &amp;&amp;f, std::list&lt; T, A&lt; T &gt;&gt; &amp;&amp;l)'],['../structftl_1_1monad_3_01maybe_3_01T_01_4_01_4.html#aa5db01a44066a51d51dbf330dea7ef40',1,'ftl::monad&lt; maybe&lt; T &gt; &gt;::map()'],['../structftl_1_1monad.html#a0441232b8bd660fb9aadebe7d52e10dd',1,'ftl::monad::map()'],['../structftl_1_1functor_3_01std_1_1tuple_3_01T_00_01Ts_8_8_8_4_01_4.html#abeb4a87b8d8a4d569fa3f2420d41fd27',1,'ftl::functor&lt; std::tuple&lt; T, Ts...&gt; &gt;::map()'],['../structftl_1_1monad_3_01std_1_1vector_3_01T_00_01A_3_01T_01_4_01_4_01_4.html#ae4e78a94428db552bf8bdcf5bb956230',1,'ftl::monad&lt; std::vector&lt; T, A&lt; T &gt; &gt; &gt;::map(F &amp;&amp;f, const std::vector&lt; T, A&lt; T &gt;&gt; &amp;v)'],['../structftl_1_1monad_3_01std_1_1vector_3_01T_00_01A_3_01T_01_4_01_4_01_4.html#aaa48bf07bfc311a953377f10a7934722',1,'ftl::monad&lt; std::vector&lt; T, A&lt; T &gt; &gt; &gt;::map(F &amp;&amp;f, std::vector&lt; T, A&lt; T &gt;&gt; &amp;&amp;v)']]],
  ['maybe',['maybe',['../classftl_1_1maybe.html',1,'ftl']]],
  ['maybe',['maybe',['../classftl_1_1maybe.html#a8e54fc608c3e9a93e291951caae51246',1,'ftl::maybe::maybe() noexcept'],['../classftl_1_1maybe.html#ab41f05fa6d4ea50dd9978052eaab7847',1,'ftl::maybe::maybe(const maybe &amp;m) noexcept(std::is_nothrow_copy_constructible&lt; A &gt;::value)'],['../classftl_1_1maybe.html#af3694ccd2eaebd440903e84ed891adda',1,'ftl::maybe::maybe(maybe &amp;&amp;m) noexcept(std::is_nothrow_move_constructible&lt; A &gt;::value)'],['../classftl_1_1maybe.html#a81286ebb18924dc22571f0d47f251392',1,'ftl::maybe::maybe(const value_type &amp;v) noexcept(std::is_nothrow_copy_constructible&lt; A &gt;::value)'],['../classftl_1_1maybe.html#a33e68dcd170f1266593557ebae027ae0',1,'ftl::maybe::maybe(value_type &amp;&amp;v) noexcept(std::is_nothrow_move_constructible&lt; A &gt;::value)'],['../classftl_1_1maybe.html#a0931b15db371a30de28e59ac5a549bfa',1,'ftl::maybe::maybe(inplace_tag, Ts &amp;&amp;...ts) noexcept(std::is_nothrow_constructible&lt; A, Ts...&gt;::value)'],['../group__maybe.html',1,'(Global Namespace)']]],
  ['maybe_20transformer',['Maybe Transformer',['../group__maybeT.html',1,'']]],
  ['memory',['Memory',['../group__memory.html',1,'']]],
  ['monad',['monad',['../structftl_1_1monad.html',1,'ftl']]],
  ['monad',['Monad',['../group__monad.html',1,'']]],
  ['monad_3c_20either_3c_20t_2c_20r_20_3e_20_3e',['monad&lt; either&lt; T, R &gt; &gt;',['../structftl_1_1monad_3_01either_3_01T_00_01R_01_4_01_4.html',1,'ftl']]],
  ['monad_3c_20maybe_3c_20t_20_3e_20_3e',['monad&lt; maybe&lt; T &gt; &gt;',['../structftl_1_1monad_3_01maybe_3_01T_01_4_01_4.html',1,'ftl']]],
  ['monad_3c_20std_3a_3aforward_5flist_3c_20t_2c_20a_3c_20t_20_3e_20_3e_20_3e',['monad&lt; std::forward_list&lt; T, A&lt; T &gt; &gt; &gt;',['../structftl_1_1monad_3_01std_1_1forward__list_3_01T_00_01A_3_01T_01_4_01_4_01_4.html',1,'ftl']]],
  ['monad_3c_20std_3a_3afuture_3c_20t_20_3e_20_3e',['monad&lt; std::future&lt; T &gt; &gt;',['../structftl_1_1monad_3_01std_1_1future_3_01T_01_4_01_4.html',1,'ftl']]],
  ['monad_3c_20std_3a_3alist_3c_20t_2c_20a_3c_20t_20_3e_20_3e_20_3e',['monad&lt; std::list&lt; T, A&lt; T &gt; &gt; &gt;',['../structftl_1_1monad_3_01std_1_1list_3_01T_00_01A_3_01T_01_4_01_4_01_4.html',1,'ftl']]],
  ['monad_3c_20std_3a_3ashared_5fptr_3c_20t_20_3e_20_3e',['monad&lt; std::shared_ptr&lt; T &gt; &gt;',['../structftl_1_1monad_3_01std_1_1shared__ptr_3_01T_01_4_01_4.html',1,'ftl']]],
  ['monad_3c_20std_3a_3avector_3c_20t_2c_20a_3c_20t_20_3e_20_3e_20_3e',['monad&lt; std::vector&lt; T, A&lt; T &gt; &gt; &gt;',['../structftl_1_1monad_3_01std_1_1vector_3_01T_00_01A_3_01T_01_4_01_4_01_4.html',1,'ftl']]],
  ['monad',['Monad',['../monadpg.html',1,'concepts']]],
  ['monoid',['monoid',['../structftl_1_1monoid.html',1,'ftl']]],
  ['monoid',['Monoid',['../group__monoid.html',1,'']]],
  ['monoid_3c_20function_3c_20m_2c_20ps_2e_2e_2e_3e_20_3e',['monoid&lt; function&lt; M, Ps...&gt; &gt;',['../structftl_1_1monoid_3_01function_3_01M_00_01Ps_8_8_8_4_01_4.html',1,'ftl']]],
  ['monoid_3c_20maybe_3c_20a_20_3e_20_3e',['monoid&lt; maybe&lt; A &gt; &gt;',['../structftl_1_1monoid_3_01maybe_3_01A_01_4_01_4.html',1,'ftl']]],
  ['monoid_3c_20ord_20_3e',['monoid&lt; ord &gt;',['../structftl_1_1monoid_3_01ord_01_4.html',1,'ftl']]],
  ['monoid_3c_20std_3a_3aforward_5flist_3c_20ts_2e_2e_2e_3e_20_3e',['monoid&lt; std::forward_list&lt; Ts...&gt; &gt;',['../structftl_1_1monoid_3_01std_1_1forward__list_3_01Ts_8_8_8_4_01_4.html',1,'ftl']]],
  ['monoid_3c_20std_3a_3afunction_3c_20m_28ps_2e_2e_2e_29_3e_20_3e',['monoid&lt; std::function&lt; M(Ps...)&gt; &gt;',['../structftl_1_1monoid_3_01std_1_1function_3_01M_07Ps_8_8_8_08_4_01_4.html',1,'ftl']]],
  ['monoid_3c_20std_3a_3afuture_3c_20t_20_3e_20_3e',['monoid&lt; std::future&lt; T &gt; &gt;',['../structftl_1_1monoid_3_01std_1_1future_3_01T_01_4_01_4.html',1,'ftl']]],
  ['monoid_3c_20std_3a_3alist_3c_20ts_2e_2e_2e_3e_20_3e',['monoid&lt; std::list&lt; Ts...&gt; &gt;',['../structftl_1_1monoid_3_01std_1_1list_3_01Ts_8_8_8_4_01_4.html',1,'ftl']]],
  ['monoid_3c_20std_3a_3ashared_5fptr_3c_20t_20_3e_20_3e',['monoid&lt; std::shared_ptr&lt; T &gt; &gt;',['../structftl_1_1monoid_3_01std_1_1shared__ptr_3_01T_01_4_01_4.html',1,'ftl']]],
  ['monoid_3c_20std_3a_3atuple_3c_20ts_2e_2e_2e_3e_20_3e',['monoid&lt; std::tuple&lt; Ts...&gt; &gt;',['../structftl_1_1monoid_3_01std_1_1tuple_3_01Ts_8_8_8_4_01_4.html',1,'ftl']]],
  ['monoid_3c_20std_3a_3avector_3c_20ts_2e_2e_2e_3e_20_3e',['monoid&lt; std::vector&lt; Ts...&gt; &gt;',['../structftl_1_1monoid_3_01std_1_1vector_3_01Ts_8_8_8_4_01_4.html',1,'ftl']]],
  ['monoida',['monoidA',['../structftl_1_1monoidA.html',1,'ftl']]],
  ['monoida_3c_20maybe_20_3e',['monoidA&lt; maybe &gt;',['../structftl_1_1monoidA_3_01maybe_01_4.html',1,'ftl']]],
  ['monoidal_20alternatives',['Monoidal Alternatives',['../monoidapg.html',1,'concepts']]],
  ['monoid',['Monoid',['../monoidpg.html',1,'concepts']]],
  ['moveassignable',['MoveAssignable',['../moveassignable.html',1,'concepts']]],
  ['moveconstructible',['MoveConstructible',['../movecons.html',1,'concepts']]]
];
